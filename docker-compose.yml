services:
  web:
    build:
      context: ./src
    expose:
      - 8000
  auth:
    build:
      context: ./auth_service
    expose:
      - 8070
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /static:/static
      - /media:/media

    ports:
      - "80:80"
    depends_on:
      - web
      - mongo-api
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql_scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
  db_auth:
    image: postgres:latest
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data/
      - ./sql_scripts/init_auth.sql:/docker-entrypoint-initdb.d/init_auth.sql
    environment:
      - POSTGRES_DB=${POSTGRES_AUTH_DB}
      - POSTGRES_USER=${POSTGRES_AUTH_USER}
      - POSTGRES_PASSWORD=${POSTGRES_AUTH_PASSWORD}
    expose:
      - 5432
  etl:
    build:
      context: ./etl
    env_file:
      - ./etl/.env
    depends_on:
      - elasticsearch
  etl_analytics:
    build:
      context: ./etl_analytics
    env_file:
      - ./etl_analytics/.env
    depends_on:
      - kafka-0
      - clickhouse
  redis:
    image: redis:alpine
    ports:
      - 6379:6379
  admin:
    build: ./admin
    env_file:
      - ./.env
    volumes:
      - /static:/static
      - /media:/media
    expose:
      - 8010
    depends_on:
      - db
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831"
      - "16686:16686"
  flask:
    build: ./flask
    expose:
      - 5000
  kafka-0:
    image: bitnami/kafka:3.4
    ports:
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_0_data:/bitnami/kafka
  kafka-1:
    image: bitnami/kafka:3.4
    ports:
      - "9095:9095"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://127.0.0.1:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_1_data:/bitnami/kafka
  kafka-2:
    image: bitnami/kafka:3.4
    ports:
      - "9096:9096"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://127.0.0.1:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_2_data:/bitnami/kafka
  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP порт для взаимодействия
      - "9000:9000"  # TCP порт
    volumes:
      - clickhouse_data:/var/lib/clickhouse
  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=Qwertys1
    volumes:
      - type: bind
        source: ./data
        target: /data/db

  mongo-api:
    build: ./mong_api
    ports:
      - "8050:8050"
    depends_on:
      - mongo

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: kibana:8.10.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  logstash:
    image: logstash:8.10.2
    depends_on:
      - elasticsearch
    environment:
      - XPACK_MONITORING_ENABLED=false
      - ES_HOST=elasticsearch:9200
    ports:
      - "5044:5044"
    volumes:
      - .logstash.conf:/usr/share/logstash/config/logstash.conf:ro
    command: logstash -f /usr/share/logstash/config/logstash.conf

  sch:
    build:
      context: ./notifications/scheduler
    expose:
      - 8006

  rabbitmq:
    image: 'rabbitmq:3.9.16-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - ./notifications/scheduler/.env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5



volumes:
  postgres_data:
  postgres_auth_data:
  static_volume:
  esdata:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:
  clickhouse_data:
  sentry-postgres:
    external: false
  sentry-redis:
    external: false
