services:
  web:
    build:
      context: ./src
    expose:
      - 8000
  auth:
    build:
      context: ./auth_service
    expose:
      - 8070
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - web
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql_scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env
    expose:
      - 5432
  db_auth:
    image: postgres:latest
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data/
      - ./sql_scripts/init_auth.sql:/docker-entrypoint-initdb.d/init_auth.sql
    environment:
      - POSTGRES_DB=${POSTGRES_AUTH_DB}
      - POSTGRES_USER=${POSTGRES_AUTH_USER}
      - POSTGRES_PASSWORD=${POSTGRES_AUTH_PASSWORD}
    expose:
      - 5432
  elasticsearch:
    image: elasticsearch:8.8.0
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    expose:
      - 9200
  etl:
    build:
      context: ./etl
    env_file:
      - ./etl/.env
    depends_on:
      - elasticsearch
  redis:
    image: redis:alpine
    expose:
      - 6379
  admin:
    build: ./admin
    env_file:
      - ./.env
    volumes:
      - static_volume:/static
    expose:
      - 8010
    depends_on:
      - db
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831"
      - "16686:16686"
  flask:
    build: ./flask
    ports:
      - "5000:5000"


volumes:
  postgres_data:
  postgres_auth_data:
  static_volume:
  esdata: